name: Update DOIs for changed Posts
on:
  workflow_dispatch:
  schedule:
    - cron: "*/10 * * * *"
env:
  UV_SYSTEM_PYTHON: 1
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download posts not indexed recently
        run: |
          mkdir -p upload
          curl https://api.rogue-scholar.org/posts/updated?per_page=10 > upload/posts.json
      - name: Set number of posts to be updated as variable
        id: current_number
        run: |
          echo "NUMBER=$(jq '."total-results"' upload/posts.json)" >> $GITHUB_OUTPUT
      - name: Install uv
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        uses: astral-sh/setup-uv@v5
      - name: "Set up Python"
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install commonmeta-py
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          uv pip install 'commonmeta-py>=0.137'
      - name: Set current date as variable
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          echo "NOW=$(date +'%s')" >> $GITHUB_OUTPUT
        id: current_date
      - name: Convert posts to commonmeta
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          uv run commonmeta list upload/posts.json -f jsonfeed > upload/commonmeta.json
      - name: update InvenioRDM content
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          uv run commonmeta push upload/posts.json -f jsonfeed -t inveniordm --host rogue-scholar.org --token ${{ secrets.INVENIORDM_TOKEN }} --legacy-key "${{ secrets.SUPABASE_KEY }}"> upload/response.json
          cat upload/response.json
      - name: Update Crossref DOIs
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          uv run commonmeta push upload/commonmeta.json -f commonmeta -t crossref_xml --depositor "${{ secrets.CROSSREF_DEPOSITOR_NAME }}" --email "${{ secrets.CROSSREF_DEPOSITOR_EMAIL }}" --registrant "${{ secrets.CROSSREF_REGISTRANT }}" --login_id "${{ secrets.CROSSREF_USERNAME_WITH_ROLE }}" --login_passwd "${{ secrets.CROSSREF_PASSWORD }}" --legacy-key "${{ secrets.SUPABASE_KEY }}" > upload/response.json
          cat upload/response.json
