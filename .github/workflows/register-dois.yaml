name: Register DOIs for new Posts
on:
  workflow_dispatch:
  # schedule:
  #   - cron: "*/10 * * * *"
jobs:
  register:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.23"
      - name: Download most recent unregistered post
        run: |
          mkdir -p upload
          curl https://api.rogue-scholar.org/posts/unregistered?per_page=1 > upload/posts.json
      - name: Set number of unregistered posts as variable
        id: current_number
        run: |
          echo "NUMBER=$(jq '."total-results"' upload/posts.json)" >> $GITHUB_OUTPUT
      - name: Install commonmeta
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          go install github.com/front-matter/commonmeta@v0.5.28
          commonmeta version
      - name: Set current date as variable
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          echo "NOW=$(date +'%s')" >> $GITHUB_OUTPUT
        id: current_date
      - name: Convert posts to commonmeta and autogenerate dois based on prefix
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          commonmeta list upload/posts.json -f jsonfeed > upload/commonmeta.json
      - name: Convert commonmeta to crossref xml
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          commonmeta list upload/commonmeta.json -f commonmeta --depositor "${{ secrets.CROSSREF_DEPOSITOR_NAME }}" --email "${{ secrets.CROSSREF_DEPOSITOR_EMAIL }}" --registrant "${{ secrets.CROSSREF_REGISTRANT }}" -t crossrefxml > upload/${{ steps.current_date.outputs.NOW }}
      - name: Update content via Crossref API
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          curl -X POST https://doi.crossref.org/servlet/deposit -F "operation=doMDUpload" -F "login_id=${{ secrets.CROSSREF_USERNAME_WITH_ROLE }}" -F "login_passwd=${{ secrets.CROSSREF_PASSWORD }}" -F "fname=@upload/${{ steps.current_date.outputs.NOW }}"
      - name: create InvenioRDM content
        if: ${{ fromJSON(steps.current_number.outputs.NUMBER) > 0 }}
        run: |
          commonmeta push upload/commonmeta.json -f commonmeta -t inveniordm --host rogue-scholar.org --token ${{ secrets.INVENIORDM_TOKEN }} --legacyKey ${{ secrets.SUPABASE_KEY }} > upload/response.json
          echo "RID=$(jq -r '.[0].id' upload/response.json)" >> $GITHUB_OUTPUT
          echo "UUID=$(jq -r '.[0].uuid' upload/response.json)" >> $GITHUB_OUTPUT
          echo "DOI=$(jq -r '.[0].doi' upload/response.json)" >> $GITHUB_OUTPUT
          echo "COMMUNITY=$(jq -r '.[0].community' upload/response.json)" >> $GITHUB_OUTPUT
        id: response
      - name: Update Front Matter blog
        if: steps.response.outputs.COMMUNITY == 'front_matter'
        run: commonmeta update-ghost-post --api-key ${{ secrets.GHOST_ADMIN_API_KEY }} --api-url ${{ secrets.GHOST_ADMIN_API_URL }} ${{ steps.response.outputs.UUID }}
      - name: Update Upstream blog
        if: steps.response.outputs.COMMUNITY == 'upstream'
        run: commonmeta update-ghost-post --api-key ${{ secrets.UPSTREAM_ADMIN_API_KEY }} --api-url ${{ secrets.UPSTREAM_ADMIN_API_URL }} ${{ secrets.UPSTREAM_ADMIN_API_URL }} ${{ steps.response.outputs.UUID }}
