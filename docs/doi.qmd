---
title: DOI registration
---

All blog posts archived with Rogue Scholar have a DOI registered with Crossref or DataCite and relevant metadata. These DOIs are either registered by the blog, or by Rogue Scholar (the majority of blog posts).

## Workflow

For blogs where Rogue Scholar is doing the DOI registration, DOIs are automatically registered for each new blog post. Optionally, only blog posts with one or more specific tags/categories are registered.

The DOI string is randomly generated (format see below) either by Rogue Scholar at the moment of DOI registration, or by the partipating blog when the blog is published. In the latter case, the DOI string is included in the RSS feed as `guid`. Rogue Scholar then uses the `guid` together with the metadata in the RSS feed to register the DOI. For blogs where not very post should be archived with Rogue Scholar, blog authors can omit the DOI as `guid` for the respective post.

## Format

Rogue Scholar registers content with Crossref and uses multiple DOI prefixes for this. The standard prefix is `10.59350`, but for blogs registered by Crossref member organizations, Rogue Scholar can also use other prefixes.

All Rogue Scholar DOIs use a standard format: a random eight letter string (generated from a random number with [base32-encoding](https://doi.org/10.53731/6kfyy-nq280)), followed by a two-digit checksum:

```
https://doi.org/10.53731/6kfyy-nq280
```

The DOI string can be generated by the commonmeta library that is available for the [Go](https://github.com/front-matter/commonmeta) and [Python](https://pypi.org/project/commonmeta-py/) languages. After installing commonmeta, use it as a command-line tool:

```
commonmeta encode 10.59350
```

To validate a Rogue Scholar DOI, use the `decode` command:

```
commonmeta decode https://doi.org/10.53731/6kfyy-nq280
```

The command returns `227095303906`, the random number used to generate the DOI. if the checksum (`80` in this case) is wrong, an error is returned.
